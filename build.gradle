// newer method of applying plugins - must be available in gradle plugin repository
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

// old way of applying plugins
//buildscript {
//    ext {
//        springBootVersion = '2.6.3.RELEASE'
//    }
//    repositories {
//        mavenCentral()
//    }
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//    }
//}
//apply plugin: 'java'
//apply plugin: 'eclipse'
//apply plugin: 'org.springframework.boot'
//apply plugin: 'io.spring.dependency-management'
group 'org.example'
version '1.0.1-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.13.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.example.springboot.Application'
        )
    }
}

//tasks.jar {
//    manifest.attributes["Main-Class"] = "com.example.springboot.Application"
//}

//jar {
//    manifest {
//        attributes('Main-Class': "com.example.springboot.Application")
//    }
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//}

//test {
//    useJUnitPlatform()
//}

